<?xml version="1.0"?>

<project name="saros" basedir="." default="build" xmlns:ant4eclipse="antlib:org.ant4eclipse">

	<!-- define ant-contrib macros -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	
	<!-- define ant4eclipse tasks -->
	<taskdef uri="antlib:org.ant4eclipse" resource="org/ant4eclipse/antlib.xml" />

	<!-- import the ant4eclipse pde macros -->
	<import file="${ant4eclipse.dir}/macros/a4e-pde-macros.xml" />

	<!-- define the workspace location here -->
	<property name="workspaceDirectory" value="${basedir}/.." />

	<property name="src.dir" value="${basedir}/src" />
	<property name="bin.dir" value="${basedir}/bin" />
	<property name="src.test.dir" value="${basedir}/test" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="test.lib.dir" value="${basedir}/test/lib" />
	<property name="instr.dir" value="${basedir}/instr" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="report.dir" value="${basedir}/report" />
	<property name="junit.report.dir" value="${report.dir}/junit" />
	<property name="findbugs.report.dir" value="${report.dir}/findbugs" />
	<property name="findbugs.reportfile" value="${findbugs.report.dir}/findbugs.xml" />
	<property name="cobertura.report.dir" value="${report.dir}/cobertura" />
	<property name="cobertura.datafile" value="${cobertura.report.dir}/cobertura.ser" />
	<property name="pmd.report.dir" value="${report.dir}/pmd" />
	<property name="pmd.reportfile" value="${pmd.report.dir}/pmd.xml" />

	<!-- cobertura setup stuff -->

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<!-- cobertura setup stuff end -->


	<!-- findbugs setup stuff -->
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

	<!-- PMD setup stuff -->
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
	

	<ant4eclipse:jdtClassPathLibrary name="org.eclipse.jdt.junit.JUNIT_CONTAINER/4">
		  <fileset dir="${eclipse.dir}">
			<include name="**/junit.jar"/>
		  </fileset>
	</ant4eclipse:jdtClassPathLibrary >

	<!-- define eclipse.plugin.dir using -D syntax) the target platform location (can be an Eclipse plugin dir or another set of JARs satisfying the Saros platform dependencies) -->
	<ant4eclipse:targetPlatform id="saros.target.platform">
		<location dir="${eclipse.dir}" />
		<!-- additional.plugin.dir is auto. expanded to additional.plugin.dir/plugins by this task -->
		<location dir="${additional.plugin.dir}" />
	</ant4eclipse:targetPlatform>

	<!-- Targets -->

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${instr.dir}" />
		<delete dir="${junit.report.dir}" />
		<delete file="${cobertura.datafile}" />
		<delete dir="${cobertura.report.dir}" />
		<delete file="${findbugs.reportfile}" />
		<delete dir="${findbugs.report.dir}" />
		<delete file="${pmd.reportfile}" />
		<delete dir="${pmd.report.dir}" />
		<delete dir="${report.dir}" />
	</target>

	<target name="build">
		<mkdir dir="${build.dir}" />
		<buildPlugin workspaceDirectory="${workspaceDirectory}" projectName="${plugin.name}" targetplatformid="saros.target.platform" destination="${build.dir}" />
	</target>

	<target name="instrument">
		<mkdir dir="${instr.dir}" />
		<cobertura-instrument todir="${instr.dir}" datafile="${cobertura.datafile}">

			<!-- only instrument Saros and Plugins proper code -->
			<includeClasses regex="de\.fu_berlin\.inf.*" />

			<!-- exclude GUI classes  -->
			<excludeClasses regex=".*\.ui\..*" />

			<!-- exclude classes ending in Test -->
			<excludeClasses regex=".*Test" />

			<!-- exclude static classes in Test classes -->
			<excludeClasses regex=".*Test\$.*" />

			<!-- exclude classes starting with Test -->
			<excludeClasses regex=".*\.Test.*" />

			<!-- exclude packages container test -->
			<excludeClasses regex=".*\.test\..*" />

			<!-- exclude classes containing TestSuite -->
			<excludeClasses regex=".*TestSuite.*" />

			<!-- exclude stf classes  -->
			<excludeClasses regex=".*\.stf\..*" />

			<fileset dir="${build.dir}/plugins">
				<include name="*.jar" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="test" depends="instrument">
		<mkdir dir="${junit.report.dir}" />

		<junit printsummary="yes" fork="yes" forkmode="perBatch">
			<sysproperty key="de.fu_berlin.dpp.test.xmpp.useExternalServer" value="true" />
			<sysproperty key="de.fu_berlin.dpp.test.xmpp.serverAddress" value="saros-eclipse1" />
			<sysproperty key="net.sourceforge.cobertura.datafile" value="${cobertura.datafile}" />
			<classpath>

				<!-- include the test lib directory first because of some library issues -->
				<fileset erroronmissingdir="false" dir="${test.lib.dir}" />
				<fileset erroronmissingdir="false" dir="${lib.dir}" />

				<fileset dir="${instr.dir}">
					<include name="*.jar" />
				</fileset>

				<fileset dir="${eclipse.dir}/plugins">
					<include name="*.jar" />
				</fileset>

			</classpath>
	
			<classpath refid="cobertura.classpath" />
			
			<formatter type="xml" />
			
			<batchtest todir="${junit.report.dir}">
				<fileset dir="${src.test.dir}">
					<exclude name="**/*PluginTest.java"/>
					<exclude name="**/stf/**"/>
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>

		<cobertura-report format="xml" datafile="${cobertura.datafile}" destdir="${cobertura.report.dir}" srcdir="${src.dir}" />
	</target>

	<target name="analyze" depends="findbugs,pmd" />

	<target name="findbugs">
		<mkdir dir="${findbugs.report.dir}" />
		<findbugs home="${findbugs.home}" output="xml" outputFile="${findbugs.reportfile}" effort="max" >
			<sourcePath path="${src.dir}" />
			<class location="${bin.dir}" />
			</findbugs>
	</target>

	<target name="pmd">
		<mkdir dir="${pmd.report.dir}" />
		<pmd rulesetfiles="rulesets/basic.xml,rulesets/unusedcode.xml,rulesets/imports.xml,rulesets/naming.xml">
			<formatter type="xml" toFile="${pmd.reportfile}"/>
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
			<classpath>
				<pathelement location="${bin.dir}"/>
			</classpath>
		</pmd>
	</target>

</project>
